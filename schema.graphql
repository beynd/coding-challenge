type Engagement {
  authentic: Int!
  average: Int!
}

type Influencer {
  ID: String! # name
  screenName: String
  categories: [String!]!
  followers: Int!
  country: String!
  engagement: Engagement!
}

type FilterResult {
  nodes: [Influencer]!
}

type PerKeyEntry {
  ID: String! # category name or country
  value: [Influencer!]!
}

type PerKeyResult {
  nodes: [PerKeyEntry]!
}

input FilterInput {
  categories: [String]
  countries: [String]
}

type Query {
  all: FilterResult!
  filter(filter: FilterInput!): FilterResult!
  perCategoryByFollowers: PerKeyResult!
  perCountryByEngAvg: PerKeyResult!

  countries: [String!]!
  categories: [String!]!
}
